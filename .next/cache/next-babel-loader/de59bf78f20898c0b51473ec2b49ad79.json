{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/HTR16/Desktop/Project \\u0110o\\u0302\\u0300 Ba\\u0309o Ho\\u0323\\u0302/frontend/common/link_config/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nvar LinkConfig = function LinkConfig(_ref) {\n  _s();\n\n  var href = _ref.href,\n      children = _ref.children;\n  var router = useRouter();\n  var className = children.props.className || '';\n\n  if (router.pathname.split('/')[1] === href.split('/')[1]) {\n    className = \"\".concat(className, \" selected\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: href,\n    children: /*#__PURE__*/React.cloneElement(children, {\n      className: className\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(LinkConfig, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = LinkConfig;\nexport default LinkConfig;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkConfig\");","map":{"version":3,"sources":["/Users/HTR16/Desktop/Project Đồ Bảo Hộ/frontend/common/link_config/index.js"],"names":["React","Link","useRouter","LinkConfig","href","children","router","className","props","pathname","split","cloneElement"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAwB;AAAA;;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACzC,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAIK,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeD,SAAf,IAA4B,EAA5C;;AACA,MAAKD,MAAM,CAACG,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,CAAD,CAA6B,CAA7B,MAAqCN,IAAI,CAACM,KAAL,CAAW,GAAX,CAAD,CAAkB,CAAlB,CAAxC,EAA8D;AAC5DH,IAAAA,SAAS,aAAMA,SAAN,cAAT;AACD;;AAED,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAA,2BAAmBJ,KAAK,CAACW,YAAN,CAAmBN,QAAnB,EAA6B;AAAEE,MAAAA,SAAS,EAATA;AAAF,KAA7B;AAAnB;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CARD;;GAAMJ,U;UACWD,S;;;KADXC,U;AAUN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\n\nconst LinkConfig = ({ href, children }) => {\n  const router = useRouter()\n  let className = children.props.className || ''\n  if ((router.pathname.split('/'))[1] === (href.split('/'))[1]) {\n    className = `${className} selected`\n  }\n\n  return <Link href={href}>{React.cloneElement(children, { className })}</Link>\n}\n\nexport default LinkConfig"]},"metadata":{},"sourceType":"module"}